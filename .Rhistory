source("C:/Alessandro/University/Bioinformatics/Project/bioinformatic-resources-project/crc_bioinf_proj.R")
crc<-load("Colorectal_Cancer.RData")
library(biomaRt)
library(edgeR)
library(dplyr)
library(ggrepel)
# annotate and retrieve protein coding genes
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
r_c<-raw_counts_df
pc_genes<-getBM(attributes = c("ensembl_gene_id"), filters = c("transcript_biotype"),values = list("protein_coding"), mart = ensembl)
pc_raw_counts_df<-raw_counts_df[rownames(raw_counts_df) %in% pc_genes[,],]
gene_length_symbol<-r_anno_df[r_anno_df$'gene_id' %in% pc_genes[,],]
#edge R
gene_sc <- c_anno_df
raw_counts <- pc_raw_counts_df
dgeFull <- DGEList(raw_counts, group=gene_sc$condition)
dgeFull <- DGEList(dgeFull$counts[apply(dgeFull$counts, 1, sum) != 0, ],
group=dgeFull$samples$group)
dgeFull <- calcNormFactors(dgeFull, method = "TMM")
normCounts <- cpm(dgeFull)
dgeFull <- estimateCommonDisp(dgeFull)
dgeFull <- estimateTagwiseDisp(dgeFull)
dgeTest <- exactTest(dgeFull)
deg <- filter(dgeTest$table, logCPM > 1 & PValue < 0.01)
upreg <- filter(deg, logFC > 1.5)
downreg <- filter(deg, logFC < -1.5)
deg$diffexpressed <- "NO"
deg$diffexpressed[deg$logFC > 1.5] <- "UP"
deg$diffexpressed[deg$logFC < -1.5] <- "DOWN"
# plot adding up all layers we have seen so far
ggplot(data=deg, aes(x=logFC, y=-log10(PValue), col=diffexpressed, label=diffexpressed)) +
geom_point() +
theme_minimal() +
geom_text_repel() +
scale_color_manual(values=c("blue", "black", "red")) +
geom_vline(xintercept=c(-1.5, 1.5), col="red") +
geom_hline(yintercept=-log10(0.01), col="red")
ggplot(data=deg, aes(x=logFC, y=-log10(PValue), col=diffexpressed, "")) +
geom_point() +
theme_minimal() +
geom_text_repel() +
scale_color_manual(values=c("blue", "black", "red")) +
geom_vline(xintercept=c(-1.5, 1.5), col="red") +
geom_hline(yintercept=-log10(0.01), col="red")
ggplot(data=deg, aes(x=logFC, y=-log10(PValue), col=diffexpressed, label="")) +
geom_point() +
theme_minimal() +
geom_text_repel() +
scale_color_manual(values=c("blue", "black", "red")) +
geom_vline(xintercept=c(-1.5, 1.5), col="red") +
geom_hline(yintercept=-log10(0.01), col="red")
dgeGFull
dgeFull
dgeFull <- DGEList(raw_counts, group=gene_sc$condition)
dgeFull
dgeFull
library(pheatmap)
pheatmap(upreg)
install.packages("pheatmap")
library(pheatmap)
pheatmap(upreg)
upreg
source("C:/Alessandro/University/Bioinformatics/Project/bioinformatic-resources-project/crc_bioinf_proj.R")
pheatmap(upreg$logFC)
pheatmap(upreg)
pheatmap(upreg$logCPM)
source("C:/Alessandro/University/Bioinformatics/Project/bioinformatic-resources-project/crc_bioinf_proj.R")
gene_sc <- c_anno_df
raw_counts <- pc_raw_counts_df
dgeFull <- DGEList(raw_counts, group=gene_sc$condition)
dgeFull <- DGEList(dgeFull$counts[apply(dgeFull$counts, 1, sum) > 20, ],
group=dgeFull$samples$group)
source("C:/Alessandro/University/Bioinformatics/Project/bioinformatic-resources-project/crc_bioinf_proj.R")
crc<-load("Colorectal_Cancer.RData")
library(biomaRt)
library(edgeR)
library(dplyr)
library(ggrepel)
# annotate and retrieve protein coding genes
ensembl <- useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
r_c<-raw_counts_df
pc_genes<-getBM(attributes = c("ensembl_gene_id"), filters = c("transcript_biotype"),values = list("protein_coding"), mart = ensembl)
pc_raw_counts_df<-raw_counts_df[rownames(raw_counts_df) %in% pc_genes[,],]
gene_length_symbol<-r_anno_df[r_anno_df$'gene_id' %in% pc_genes[,],]
##### edge R
# Setup
gene_sc <- c_anno_df
raw_counts <- pc_raw_counts_df
dgeFull <- DGEList(raw_counts, group=gene_sc$condition)
# Con punto B
dgeFull <- DGEList(dgeFull$counts[apply(dgeFull$counts, 1, sum) > 20, ],
group=dgeFull$samples$group)
dgeFull <- calcNormFactors(dgeFull, method = "TMM")
normCounts <- cpm(dgeFull)
dgeFull <- estimateCommonDisp(dgeFull)
dgeFull <- estimateTagwiseDisp(dgeFull)
dgeTest <- exactTest(dgeFull)
deg <- filter(dgeTest$table, logCPM > 1 & PValue < 0.01)
upreg <- filter(deg, logFC > 1.5)
downreg <- filter(deg, logFC < -1.5)
deg$diffexpressed <- "NO"
deg$diffexpressed[deg$logFC > 1.5] <- "UP"
deg$diffexpressed[deg$logFC < -1.5] <- "DOWN"
# Punto c
ggplot(data=deg, aes(x=logFC, y=-log10(PValue), col=diffexpressed, label="")) +
geom_point() +
theme_minimal() +
geom_text_repel() +
scale_color_manual(values=c("blue", "black", "red")) +
geom_vline(xintercept=c(-1.5, 1.5), col="red") +
geom_hline(yintercept=-log10(0.01), col="red")
library(pheatmap)
pheatmap(upreg$logCPM)
gene_sc <- c_anno_df
raw_counts <- pc_raw_counts_df
dgeFull <- DGEList(raw_counts, group=gene_sc$condition)
gene_sc <- c_anno_df
raw_counts <- pc_raw_counts_df
raw_counts
View(raw_counts)
raw_counts[rowSums(raw_counts > 20) >= 5, ]
View(raw_counts[rowSums(raw_counts > 20) >= 5, ])
source("C:/Alessandro/University/Bioinformatics/Project/bioinformatic-resources-project/crc_bioinf_proj.R")
View(raw_counts[rowSums(raw_counts > 20) >= 1, ])
rowSums(raw_counts > 20)
View(rowSums(row_counts > 20))
View(rowSums(raw_counts > 20))
View(rowSums(raw_counts > 20) >= 1)
View(rowSums(raw_counts > 20) >= 30)
View(rowSums(raw_counts > 20) >= 90)
View(rowSums(raw_counts > 20) >= 100)
View(rowSums(raw_counts > 20) >= 101)
source("C:/Alessandro/University/Bioinformatics/Project/bioinformatic-resources-project/crc_bioinf_proj.R")
